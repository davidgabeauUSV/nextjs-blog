import { AuthModule } from '../modules/auth';
import { UserModule } from '../modules/user';
import { MagicSDKAdditionalConfiguration } from '../types';
import { RPCProviderModule } from '../modules/rpc-provider';
export declare class MagicSDK {
    readonly apiKey: string;
    private static readonly __transports__;
    private static readonly __overlays__;
    readonly endpoint: string;
    readonly encodedQueryParams: string;
    /**
     * Contains methods for starting a Magic SDK authentication flow.
     */
    readonly auth: AuthModule;
    /**
     * Contains methods for interacting with user data, checking login
     * status, generating cryptographically-secure ID tokens, and more.
     */
    readonly user: UserModule;
    /**
     * Contains a Web3-compliant provider. Pass this module to your Web3/Ethers
     * instance for automatic compatibility with Ethereum methods.
     */
    readonly rpcProvider: RPCProviderModule;
    /**
     * Creates an instance of Magic SDK.
     */
    constructor(apiKey: string, options?: MagicSDKAdditionalConfiguration);
    /**
     * Represents the JSON RPC payload message channel associated with this
     * `MagicSDK` instance.
     *
     * @internal
     */
    private get transport();
    /**
     * Represents the iframe controller associated with this `MagicSDK` instance.
     *
     * @internal
     */
    private get overlay();
}
